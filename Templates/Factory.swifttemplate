<% for (module, factories) in getAllFactoriesSeparatedByModule() { -%>
// sourcery:file:<%=module%>-Factory
import SwiftDIRuntime
#if os(iOS)
import UIKit
#endif

<% for moduleToImport in getModulesToImportForFile(withModule: module, containingFactories: factories) { -%>
import <%=moduleToImport-%>
<% } -%>

<% for factory in factories { -%>

<%=factory.visibility%> class <%=factory.name%>: Provider<<%=factory.providedTypeName%>> {

<% for property in factory.properties { -%>
    private let <%=property.name%>: <%=property.typeName%>
<% } -%>


<% if factory.dependencyCount > 0 { %>
    init(
        <%=factory.initializerParams%>
    ) {
    <% for property in factory.properties { -%>
    self.<%=property.name%> = <%=property.name%>
    <% } _-%>
    }
<% } %>

    <%=factory.visibility%> override func get() -> <%=factory.providedTypeName%> {
        let instance: <%=factory.providedTypeName%>
        <%_=factory.instantiation%>
        return instance
    }

}
<% } -%>
// sourcery:end
<% } -%>
